// Initial Code
// var  fcDemos = {};

// fcDemos['ex1'] =  {
//     title: 'A Simple Chart',
//     description: 'A simple chart with all data embedded into the directive',
//     module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme\)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
//     component: `// In app.component.ts\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html'\n})\nexport class AppComponent { \n    dataSource: Object;\n    chartConfig: Object;\n\n    constructor() {\n         this.chartConfig = {\n            width: '700',\n            height: '400',\n            type: 'column2d',\n            dataFormat: 'json',\n        };\n\n        this.dataSource = {\n            "chart": {\n              "caption": "Countries With Most Oil Reserves [2017-18]",\n              "subCaption": "In MMbbl = One Million barrels",\n              "xAxisName": "Country",\n              "yAxisName": "Reserves (MMbbl)",\n              "numberSuffix": "K",\n              "theme": "fusion",\n            },\n            "data": [{\n              "label": "Venezuela",\n              "value": "290"\n            }, {\n              "label": "Saudi",\n              "value": "260"\n            }, {\n              "label": "Canada",\n              "value": "180"\n            }, {\n              "label": "Iran",\n              "value": "140"\n            }, {\n              "label": "Russia",\n              "value": "115"\n            }, {\n              "label": "UAE",\n              "value": "100"\n            }, {\n              "label": "US",\n              "value": "30"\n            }, {\n              "label": "China",\n              "value": "30"\n            }]\n          };\n\n    }\n}\n`,
//     template: `<!-- in app.component.html -->\n<fusioncharts\n    [chartConfig]=chartConfig\n    [dataSource]=dataSource >\n</fusioncharts>`
// };

// fcDemos['ex2'] =  {
//     title: 'A 3D Pie Chart',
//     description:'A 3D pie chart using the datasource attribute from components scope',
//     module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme\)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
//     component: `// in app.component.ts\nimport { Component } from '@angular/core';\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html'\n})\nexport class AppComponent {  \n    dataSource = {\n        "chart": {\n          "caption": "Recommended Portfolio Split",\n          "subCaption" : "For a net-worth of $1M",\n          "showValues":"1",\n          "showPercentInTooltip" : "0",\n          "numberPrefix" : "$",\n          "enableMultiSlicing":"1",\n          "theme": "fusion"\n        },\n        "data": [{\n          "label": "Equity",\n          "value": "300000"\n        }, {\n          "label": "Debt",\n          "value": "230000"\n        }, {\n          "label": "Bullion",\n          "value": "180000"\n        }, {\n          "label": "Real-estate",\n          "value": "270000"\n        }, {\n          "label": "Insurance",\n          "value": "20000"\n        }]\n    }\n}\n`,
//     template: `<!-- in app.component.html -->\n<fusioncharts \n    width="600" \n    height="400"\n    type="pie3d"\n    [dataSource]=dataSource >\n</fusioncharts>`
// };

// fcDemos['ex3'] =  {
//     title: 'A Column, Area and Line Combi Chart',
//     description:'A column, line and area combination chart using the datasource attribute',
//     module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme\)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
//     component: `// in app.component.ts\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n    dataSource = {\n        "chart": {\n          "caption": "Expense Analysis",\n          "subCaption": "ACME Inc.",\n          "xAxisname": "Region",\n          "yAxisName": "Amount (In USD)",\n          "numberPrefix": "$",\n          "exportenabled": "1",\n          "theme": "fusion"\n        },\n        "categories": [{\n          "category": [{\n            "label": "East"\n          }, {\n            "label": "West"\n          }, {\n            "label": "South"\n          }, {\n            "label": "North"\n          }]\n        }],\n        "dataset": [{\n          "seriesName": "Actual Expenses",\n          "data": [{\n            "value": "1441290"\n          }, {\n            "value": "855912"\n          }, {\n            "value": "911404"\n          }, {\n            "value": "648136"\n          }]\n        }, {\n          "seriesName": "Budgeted Expenses",\n          "renderAs": "line",\n          "data": [{\n            "value": "1297430"\n          }, {\n            "value": "776485"\n          }, {\n            "value": "685352"\n          }, {\n            "value": "726791"\n          }]\n        }, {\n          "seriesName": "Unknown liabilities",\n          "renderAs": "area",\n          "showAnchors" : "0",\n          "data": [{\n            "value": "143860"\n          }, {\n            "value": "79427"\n          }, {\n            "value": "226052"\n          }, {\n            "value": "78655"\n          }]\n        }]\n      };\n\n    constructor () {\n    }\n}\n`,
//     template: `<!-- in app.component.html -->\n<fusioncharts\n    width="600" \n    height="400"\n    type="mscombi2d"\n    [dataSource]=dataSource>\n</fusioncharts>`
// };

// fcDemos['ex4'] =  {
//     module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme\)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
//     component: `// in app.component.ts\nimport {Component} from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n    dataSource = {\n        chart: {\n            caption: "Harry's SuperMart",\n            subCaption: "Top 5 stores in last month by revenue",\n            numberPrefix: "$",\n            theme: "ocean"\n        },\n        data:[{\n            label: "Bakersfield Central",\n            value: "880000"\n        },\n        {\n            label: "Garden Groove harbour",\n            value: "730000"\n        },\n        {\n            label: "Los Angeles Topanga",\n            value: "590000"\n        },\n        {\n            label: "Compton-Rancho Dom",\n            value: "520000"\n        },\n        {\n            label: "Daly City Serramonte",\n            value: "330000"\n        }]\n    };\n};\n`,
//     template: `<!-- in app.component.html -->\n<fusioncharts\n    width="300" \n    height="200"\n    type="column2d"\n    [dataSource]=dataSource>\n</fusioncharts>\n\n<fusioncharts\n    width="300" \n    height="200"\n    type="column2d"\n    [dataSource]=dataSource>\n</fusioncharts>`
// };

// fcDemos['ex5'] =  {
//     title: 'Fetch data from JSON URL',
//     description:'Fetch data remotely from a JSON file or URL',
//     module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme\)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
//     component: `// in app.component.ts\nimport {Component} from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n};\n\n`,
//     template: `<!-- in app.component.html -->\n<fusioncharts \n    dataFormat="jsonurl"\n    dataSource="../data/data.json"\n    type="column2d"\n    width="600"\n    height="400">\n</fusioncharts>\n`
// };

// fcDemos['ex5a'] =  {
//     title: 'Fetch data from a XML URL',
//     description:'Fetch data remotely from a XML file or URL',
//     module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme\)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
//     component: `// in app.component.ts\nimport {Component} from '@angular/core';\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html'\n})\n\nexport class AppComponent {\n};\n`,
//     template: `<!-- in app.component.html -->\n<fusioncharts\n    dataFormat="xmlurl"\n    dataSource="data/data.xml"\n    type="column2d"\n    width="600"\n    height="400" >\n</fusioncharts>\n`
// };

// fcDemos['ex6'] =  {
//     title: 'Update chart data from component',
//     description:'Change the data dynamically in the component and watch the chart update automatically',
//     module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme\)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
//     component: `// in app.component.ts\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html'\n})\n\nexport class AppComponent {\n\n    type = 'Column2D';\n    width = '600';\n    height = '300';\n    dataFormat = 'json';\n    dataSource: any = {\n        "chart": {\n          "caption": "Countries With Most Oil Reserves [2017-18]",\n          "subCaption": "In MMbbl = One Million barrels",\n          "xAxisName": "Country",\n          "yAxisName": "Reserves (MMbbl)",\n          "numberSuffix": "K",\n          "theme": "fusion",\n          "updateAnimDuration":"0.4"\n        },\n        "data": [{\n          "label": "Venezuela",\n          "value": "290"\n        }, {\n          "label": "Saudi",\n          "value": "260"\n        }, {\n          "label": "Canada",\n          "value": "180"\n        }, {\n          "label": "Iran",\n          "value": "140"\n        }, {\n          "label": "Russia",\n          "value": "115"\n        }, {\n          "label": "UAE",\n          "value": "100"\n        }, {\n          "label": "US",\n          "value": "30"\n        }, {\n          "label": "China",\n          "value": "30"\n        }]\n    };\n\n    //This function generates random number to update the chart data.\n    getRandomNumber = function () {\n        var max = 290, min = 30;\n        return Math.round(((max - min) * Math.random()) + min);\n    }\n    updateMyChartData() {\n        this.dataSource.data[2].value = this.getRandomNumber();\n        this.dataSource.data[3].value = this.getRandomNumber();\n    }\n\n    constructor () {\n\n    }\n}\n`,
//     template: `<!-- in app.component.html -->\n<style >\n    .btn { font-family: 'Source Sans Pro'; }\n    .btn.btn-primary { background: #4a4d8c;  transition: all 300ms;}\n    .btn.btn-primary:hover{ background: #5c62b5; }\n    .btn.btn-primary:active{ background:#4a4d8c }\n\n</style>\n<fusioncharts\n    width={{width}}\n    height={{height}}\n    type={{type}}\n    dataFormat={{dataFormat}}\n    [dataSource]=dataSource >\n</fusioncharts>\n\n<div style='display: flex; justify-content: center'><a class="btn btn-primary" (click)="updateMyChartData()">Click me to change data</a></div>\n`
// };

// fcDemos['ex7'] =  {
//     title: 'Trigger events from chart',
//     description: 'Hover on a plot to trigger an event in the component, and update variables',
//     module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme\)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
//     component: `// In app.component.ts\nimport { Component, NgZone} from '@angular/core';\n\n@Component({\n    selector: 'chart',\n    templateUrl: 'ex7.html',\n      styleUrls: [\n          '../ex.css'\n      ]\n})\nexport class Ex7 {\n   \n\n    dataSource = {\n        "chart": {\n          "caption": "Countries With Most Oil Reserves [2017-18]",\n          "subCaption": "In MMbbl = One Million barrels",\n          "xAxisName": "Country",\n          "yAxisName": "Reserves (MMbbl)",\n          "numberSuffix": "K",\n          "theme": "fusion",\n        },\n        "data": [{\n          "label": "Venezuela",\n          "value": "290"\n        }, {\n          "label": "Saudi",\n          "value": "260"\n        }, {\n          "label": "Canada",\n          "value": "180"\n        }, {\n          "label": "Iran",\n          "value": "140"\n        }, {\n          "label": "Russia",\n          "value": "115"\n        }, {\n          "label": "UAE",\n          "value": "100"\n        }, {\n          "label": "US",\n          "value": "30"\n        }, {\n          "label": "China",\n          "value": "30"\n        }]\n    };\n    \n    selectedLabel = "";\n    selectedValue = "";\n\n    update() {\n        return (eve, arg) => {            \n            this.zone.run(() => {\n                \n                this.selectedLabel = arg.categoryLabel;\n                this.selectedValue = arg.displayValue;\n            })\n        }\n    }\n    \n    events = {\n        dataplotRollover: this.update()\n    }\n\n    constructor(private zone:NgZone){}\n}\n`,
//     template: `<!-- in app.component.html-->\n<fusioncharts\n    width="600" \n    height="400"\n    type="column2d"\n    [dataSource]="dataSource"\n    [events]="events">\n</fusioncharts>\n<p style="font-size:20px;font-weight: 300;">You're are currently hovering over <u>{{selectedLabel || "______"}}</u> whose value is <u>{{selectedValue || "_______"}} </u></p>\n`
// };

// fcDemos['ex8'] =  {
//     title: 'Update chart attribute from component',
//     description: 'Change a parameter in the components variable and see it automatically update the chart',
//     module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme\)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
//     component: `// in app.component.ts\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html',\n\n})\n\nexport class AppComponent {\n\n    dataSource = {\n        "chart": {\n          "caption": "Countries With Most Oil Reserves [2017-18]",\n          "subCaption": "In MMbbl = One Million barrels",\n          "xAxisName": "Country",\n          "yAxisName": "Reserves (MMbbl)",\n          "numberSuffix": "K",\n          "theme": "fusion",\n        },\n        "data": [{\n          "label": "Venezuela",\n          "value": "290"\n        }, {\n          "label": "Saudi",\n          "value": "260"\n        }, {\n          "label": "Canada",\n          "value": "180"\n        }, {\n          "label": "Iran",\n          "value": "140"\n        }, {\n          "label": "Russia",\n          "value": "115"\n        }, {\n          "label": "UAE",\n          "value": "100"\n        }, {\n          "label": "US",\n          "value": "30"\n        }, {\n          "label": "China",\n          "value": "30"\n        }]\n    };\n\n    changeBackgroundColor = function () {\n        this.dataSource.chart.bgColor = "#efefef";\n    };\n\n    changeCaptionTextAlignment = function () {\n        this.dataSource.chart.captionAlignment = "left";\n    };\n\n    constructor () {\n\n    }\n\n}\n`,
//     template: `<!-- in app.component.html -->\n<fusioncharts\n    width="600" \n    height="400"\n    type="column2d"\n    [dataSource]="dataSource" >\n</fusioncharts>\n\n<p><a class="btn btn-default" (click)="changeBackgroundColor()">Change chart background color</a>\n    <a class="btn btn-default" (click)="changeCaptionTextAlignment()">Make Caption text left-aligned</a>\n</p>\n`
// };

// fcDemos['_ex9'] =  {
//     module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme\)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
//     component: `import {Component} from '@angular/core';\n\n@Component({\n    selector: 'chart',\n    templateUrl: 'ex9.html'\n})\n\nexport class Ex9 {\n    demoId = 'ex9';\n\n    dataSource = {\n        chart: {\n            "caption": "Sales - 2012 v 2013",\n            "numberprefix": "$",\n            "plotgradientcolor": "",\n            "bgcolor": "FFFFFF",\n            "showalternatehgridcolor": "0",\n            "divlinecolor": "CCCCCC",\n            "showvalues": "0",\n            "showcanvasborder": "0",\n            "canvasborderalpha": "0",\n            "canvasbordercolor": "CCCCCC",\n            "canvasborderthickness": "1",\n            "yaxismaxvalue": "30000",\n            "captionpadding": "30",\n            "linethickness": "3",\n            "yaxisvaluespadding": "15",\n            "legendshadow": "0",\n            "legendborderalpha": "0",\n            "palettecolors": "#f8bd19,#008ee4,#33bdda,#e44a00,#6baa01,#583e78",\n            "showborder": "0"\n        },\n\n        categories: [\n            {\n                "category": [\n                    {\n                        "label": "Jan"\n                    },\n                    {\n                        "label": "Feb"\n                    },\n                    {\n                        "label": "Mar"\n                    },\n                    {\n                        "label": "Apr"\n                    },\n                    {\n                        "label": "May"\n                    },\n                    {\n                        "label": "Jun"\n                    },\n                    {\n                        "label": "Jul"\n                    },\n                    {\n                        "label": "Aug"\n                    },\n                    {\n                        "label": "Sep"\n                    },\n                    {\n                        "label": "Oct"\n                    },\n                    {\n                        "label": "Nov"\n                    },\n                    {\n                        "label": "Dec"\n                    }\n                ]\n            }\n        ],\n\n        dataset: [\n            {\n                "seriesname": "2013",\n                "data": [\n                    {\n                        "value": "22400"\n                    },\n                    {\n                        "value": "24800"\n                    },\n                    {\n                        "value": "21800"\n                    },\n                    {\n                        "value": "21800"\n                    },\n                    {\n                        "value": "24600"\n                    },\n                    {\n                        "value": "27600"\n                    },\n                    {\n                        "value": "26800"\n                    },\n                    {\n                        "value": "27700"\n                    },\n                    {\n                        "value": "23700"\n                    },\n                    {\n                        "value": "25900"\n                    },\n                    {\n                        "value": "26800"\n                    },\n                    {\n                        "value": "24800"\n                    }\n                ]\n            },\n            {\n                "seriesname": "2012",\n                "data": [\n                    {\n                        "value": "10000"\n                    },\n                    {\n                        "value": "11500"\n                    },\n                    {\n                        "value": "12500"\n                    },\n                    {\n                        "value": "15000"\n                    },\n                    {\n                        "value": "16000"\n                    },\n                    {\n                        "value": "17600"\n                    },\n                    {\n                        "value": "18800"\n                    },\n                    {\n                        "value": "19700"\n                    },\n                    {\n                        "value": "21700"\n                    },\n                    {\n                        "value": "21900"\n                    },\n                    {\n                        "value": "22900"\n                    },\n                    {\n                        "value": "20800"\n                    }\n                ]\n            }\n        ]\n    }\n}\n`,
//     template: `<!-- in app.component.html -->\n<fusioncharts\n    width="600" \n    height="400"\n    type="msline"\n    dataFormat="json"\n    [dataSource]="dataSource" >\n</fusioncharts>\n`
// };

// fcDemos['ex9'] =  {
//     title: 'Percentage Calculation',
//     description: 'Hover on a plot to see the percentage value with respect to total',
//     module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme\)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
//     component: `// in app.component.ts\nimport { Component, AfterViewInit, NgZone} from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html'\n})\n\nexport class AppComponent {\n\n    logMessage = 'Hover on the plot to see the percentage of a column wrt total';\n\n    dataSource = {\n        "chart": {\n          "caption": "Countries With Most Oil Reserves [2017-18]",\n          "subCaption": "In MMbbl = One Million barrels",\n          "xAxisName": "Country",\n          "yAxisName": "Reserves (MMbbl)",\n          "numberSuffix": "K",\n          "theme": "fusion",\n        },\n        "data": [{\n          "label": "Venezuela",\n          "value": "290"\n        }, {\n          "label": "Saudi",\n          "value": "260"\n        }, {\n          "label": "Canada",\n          "value": "180"\n        }, {\n          "label": "Iran",\n          "value": "140"\n        }, {\n          "label": "Russia",\n          "value": "115"\n        }, {\n          "label": "UAE",\n          "value": "100"\n        }, {\n          "label": "US",\n          "value": "30"\n        }, {\n          "label": "China",\n          "value": "30"\n        }]\n    };\n\n    total: number;\n\n    getPercentValue() {\n        return (eve,  arg) => {\n            this.zone.run(() => {\n                \n                let value = (arg.value / this.total * 100).toFixed(2);\n                this.logMessage = arg.categoryLabel + " is  " + value + "% of the total";\n            })\n        }\n    }\n\n    events = {\n        dataPlotRollOver: this.getPercentValue()\n    }\n\n    constructor (private zone:NgZone) {\n        let myData = this.dataSource.data;\n\n        this.total = 0;\n\n        // Calculate the sum of all values\n        for (let i = 0; i < myData.length; i++) {\n            this.total += Number(myData[i].value);\n        }\n    \n    }\n\n   \n}\n`,
//     template: `<!-- in app.component.html -->\n<style type="text/css">\n    .log-pane {\n        padding-top: 10px;\n        padding-right: 10px;\n        padding-bottom: 10px;\n        padding-left: 10px;\n        border: 2px solid black;\n        font-size: 20px;\n    }    \n</style>\n\n<fusioncharts\n     width="1000"\n     height="550"\n     type="column2d"\n     [events]="events"\n     [dataSource]="myDataSource">\n</fusioncharts>\n\n<div class='log-pane'>{{logMessage}}</div>`
// };

// fcDemos['ex10'] =  {
//     title: 'Export multiple charts',
//     description: 'Use Batch Export to export multiple charts as a single image/PDF',
//     module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme\)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
//     component: `// in app.component.ts\nimport { Component } from '@angular/core';\nimport * as FusionCharts from 'fusioncharts';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html',\n})\n\nexport class Ex10 {\n    dataSource = {\n        "chart": {\n          "caption": "Countries With Most Oil Reserves [2017-18]",\n          "subCaption": "In MMbbl = One Million barrels",\n          "xAxisName": "Country",\n          "yAxisName": "Reserves (MMbbl)",\n          "numberSuffix": "K",\n          "theme": "fusion",\n        },\n        "data": [{\n          "label": "Venezuela",\n          "value": "290"\n        }, {\n          "label": "Saudi",\n          "value": "260"\n        }, {\n          "label": "Canada",\n          "value": "180"\n        }, {\n          "label": "Iran",\n          "value": "140"\n        }, {\n          "label": "Russia",\n          "value": "115"\n        }, {\n          "label": "UAE",\n          "value": "100"\n        }, {\n          "label": "US",\n          "value": "30"\n        }, {\n          "label": "China",\n          "value": "30"\n        }]\n    };\n\n    stackedColumnData = {\n      chart: {\n        caption: "Yearly Energy Production Rate",\n        subCaption: " Top 5 Developed Countries",\n        numbersuffix: " TWh",\n        showSum: "1",\n        plotToolText:\n          "$label produces <b>$dataValue</b> of energy from $seriesName",\n        theme: "fusion"\n      },\n      categories: [\n        {\n          category: [\n            {\n              label: "Canada"\n            },\n            {\n              label: "China"\n            },\n            {\n              label: "Russia"\n            },\n            {\n              label: "Australia"\n            },\n            {\n              label: "United States"\n            },\n            {\n              label: "France"\n            }\n          ]\n        }\n      ],\n      dataSet: [\n        {\n          seriesName: "Coal",\n          data: [\n            {\n              value: "400"\n            },\n            {\n              value: "830"\n            },\n            {\n              value: "500"\n            },\n            {\n              value: "420"\n            },\n            {\n              value: "790"\n            },\n            {\n              value: "380"\n            }\n          ]\n        },\n        {\n          seriesName: "Hydro",\n          data: [\n            {\n              value: "350"\n            },\n            {\n              value: "620"\n            },\n            {\n              value: "410"\n            },\n            {\n              value: "370"\n            },\n            {\n              value: "720"\n            },\n            {\n              value: "310"\n            }\n          ]\n        },\n        {\n          seriesName: "Nuclear",\n          data: [\n            {\n              value: "210"\n            },\n            {\n              value: "400"\n            },\n            {\n              value: "450"\n            },\n            {\n              value: "180"\n            },\n            {\n              value: "570"\n            },\n            {\n              value: "270"\n            }\n          ]\n        },\n        {\n          seriesName: "Gas",\n          data: [\n            {\n              value: "180"\n            },\n            {\n              value: "330"\n            },\n            {\n              value: "230"\n            },\n            {\n              value: "160"\n            },\n            {\n              value: "440"\n            },\n            {\n              value: "350"\n            }\n          ]\n        },\n        {\n          seriesName: "Oil",\n          data: [\n            {\n              value: "60"\n            },\n            {\n              value: "200"\n            },\n            {\n              value: "200"\n            },\n            {\n              value: "50"\n            },\n            {\n              value: "230"\n            },\n            {\n              value: "150"\n            }\n          ]\n        }\n      ]\n    }\n\n    exportChart(e){      \n      FusionCharts.batchExport({\n        exportFormat:'pdf'\n      })\n    }\n\n    constructor () {\n    }\n\n}\n`,
//     template: `<!-- in app.component.html -->\n<style >\n    .btn { font-family: 'Source Sans Pro'; }\n    .btn.btn-primary { background: #4a4d8c;  transition: all 300ms;}\n    .btn.btn-primary:hover{ background: #5c62b5; }\n    .btn.btn-primary:active{ background:#4a4d8c }\n    div > a {margin: 0px 10px;}\n</style>\n\n<fusioncharts\n   width="700"\n   height="400"\n   type="column2D"\n   [dataSource]="dataSource"\n   >\n</fusioncharts>\n\n<fusioncharts\n   width="600"\n   height="600"\n   type="stackedcolumn2d"\n   dataFormat="json"\n   [dataSource]="stackedColumnData">\n</fusioncharts>\n\n<div style="display: flex;justify-content: center">\n    <button (click)="exportChart($event)" class="btn btn-primary">Export both charts as a single PDF</button>\n</div>\n\n\n\n`
// };

// fcDemos['ex11'] =  {
//     title: 'Add drill-down to chart',
//     description: 'Use LinkedCharts to quickly add drill-down to charts',
//     module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme\)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
//     component: `// in app.component.ts\nimport { Component, NgZone} from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html',\n})\n\nexport class AppComponent {\n  \n    chartInstance: any = {};\n    initialized(e){\n      this.chartInstance = e.chart;\n      this.chartInstance.configureLink({\n        type: "pie2d",\n        width: "500",\n        overlayButton: {\n            message: 'Back',\n            fontColor: '880000',\n            bgColor: 'FFEEEE',\n            borderColor: '660000'\n          }\n        },0)\n    }\n\n    dataSource = {\n      "chart": {\n          "caption": "Sales of top 3 juice flavors last year",\n          "subcaption": "Click on a column to see details",\n          "xaxisname": "Flavor",\n          "yaxisname": "Amount (In USD)",\n          "numberprefix": "$",\n          "theme": "fusion",\n          "rotateValues": "0"\n      },\n      "data": [\n        {\n          "label": "Apple",\n          "value": "810000",\n          "link": "newchart-xml-apple"\n        },\n        {\n          "label": "Cranberry",\n          "value": "620000",\n          "link": "newchart-xml-cranberry"\n        },\n        {\n          "label": "Grape",\n          "value": "350000",\n          "link": "newchart-xml-grapes"\n        }],\n        "linkeddata": [\n          {\n            "id": "apple",\n            "linkedchart": {\n                "chart": {\n                    "caption": "Apple Juice - Quarterly Sales",\n                    "subcaption": "Last year",\n                    "numberprefix": "$",\n                    "theme": "fusion",\n                    "rotateValues": "0",\n                    "plottooltext": "$label, $dataValue,  $percentValue"\n                },\n                "data": [{\n                    "label": "Q1",\n                    "value": "157000"\n                }, {\n                    "label": "Q2",\n                    "value": "172000"\n                }, {\n                    "label": "Q3",\n                    "value": "206000"\n                }, {\n                    "label": "Q4",\n                    "value": "275000"\n                }]\n              }\n            },\n          {\n            "id": "cranberry",\n            "linkedchart": {\n              "chart": {\n                  "caption": "Cranberry Juice - Quarterly Sales",\n                  "subcaption": "Last year",\n                  "numberprefix": "$",\n                  "theme": "fusion",\n                  "plottooltext": "$label, $dataValue,  $percentValue"\n              },\n              "data": [\n                {\n                  "label": "Q1",\n                  "value": "102000"\n                },\n                {\n                  "label": "Q2",\n                  "value": "142000"\n                },\n                {\n                  "label": "Q3",\n                  "value": "187000"\n                },\n                {\n                  "label": "Q4",\n                  "value": "189000"\n                }]\n            }\n          },\n          {\n            "id": "grapes",\n            "linkedchart": {\n                "chart": {\n                    "caption": "Grape Juice - Quarterly Sales",\n                    "subcaption": "Last year",\n                    "numberprefix": "$",\n                    "theme": "fusion",\n                    "rotateValues": "0",\n                    "plottooltext": "$label, $dataValue,  $percentValue"\n                },\n                "data": [{\n                    "label": "Q1",\n                    "value": "45000"\n                }, {\n                    "label": "Q2",\n                    "value": "72000"\n                }, {\n                    "label": "Q3",\n                    "value": "95000"\n                }, {\n                    "label": "Q4",\n                    "value": "108000"\n                }]\n            }\n          }\n        ]\n    };\n\n    constructor(private zone:NgZone){}\n}\n`,
//     template: `<!-- in app.component.html -->\n<fusioncharts\n  type="column2d"\n  width="700"\n  height="400"\n  dataFormat="json"\n  [dataSource]="dataSource"\n  (initialized)="initialized($event)"\n></fusioncharts>\n\n\n`
// };

// fcDemos['ex12'] =  {
//     title: 'A simple gauge',
//     description: 'A simple gauge to show customer satisfaction score',
//     module:`// Setup needed in app.module.ts\n\nimport { NgModule } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n\n// Load Widgets\nimport * as Widgets from 'fusioncharts/fusioncharts.widgets';\n\n// Load FusionTheme Theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Widgets, FusionTheme\)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n\n}\n`,
//     component: `// in app.component.ts\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n  dataSource = {\n    "chart": {\n        "caption": "Nordstorm's Customer Satisfaction Score for 2017",\n        "lowerLimit": "0",\n        "upperLimit": "100",\n        "showValue": "1",\n        "numberSuffix": "%",\n        "theme": "fusion",\n        "showToolTip": "0"\n    },\n    "colorRange": {\n        "color": [{\n            "minValue": "0",\n            "maxValue": "50",\n            "code": "#F2726F"\n        }, {\n            "minValue": "50",\n            "maxValue": "75",\n            "code": "#FFC533"\n        }, {\n            "minValue": "75",\n            "maxValue": "100",\n            "code": "#62B58F"\n        }]\n    },\n    "dials": {\n          "dial": [{\n              "value": "81"\n          }]\n    }\n  }\n\n  constructor(){}\n\n}\n`,
//     template: `<!-- in app.component.html -->\n<fusioncharts\n type="angulargauge"\n width="450"\n height="250"\n dataFormat="json"\n [dataSource]="dataSource"\n></fusioncharts>\n`
// };

// fcDemos['ex13'] =  {
//     title: 'World Map',
//     description: 'World map showing data for different continents',
//     module: `// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n\n// Load Maps  \nimport * as Maps from 'fusioncharts/fusioncharts.maps';\n\n// Load WorldMap definition\nimport * as WorldMap from 'fusioncharts/maps/fusioncharts.world';\n\n// Load FusionTheme theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\n\n// Add dependencies for FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Maps, WorldMap, FusionTheme\)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
//     component: `// in app.component.ts\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html'\n})\n\nexport class AppComponent {\n    dataSource = {\n      "chart": {\n        "caption": "Average Annual Population Growth",\n        "subcaption": " 1955-2015",\n        "numbersuffix": "%",\n        "includevalueinlabels": "1",\n        "labelsepchar": ": ",\n        "entityFillHoverColor": "#FFF9C4",\n        "theme": "fusion"\n      },\n      "colorrange": {\n        "minvalue": "0",\n        "code": "#FFE0B2",\n        "gradient": "1",\n        "color": [\n    \n          {\n            "minvalue": "0.5",\n            "maxvalue": "1.0",\n            "color": "#FFD74D"\n          },\n          {\n            "minvalue": "1.0",\n            "maxvalue": "2.0",\n            "color": "#FB8C00"\n          },\n          {\n            "minvalue": "2.0",\n            "maxvalue": "3.0",\n            "color": "#E65100"\n          }\n        ]\n      },\n      "data": [{\n          "id": "NA",\n          "value": ".82",\n          "showLabel": "1"\n          \n        },\n        {\n          "id": "SA",\n          "value": "2.04",\n          "showLabel": "1"\n        },\n        {\n          "id": "AS",\n          "value": "1.78",\n          "showLabel": "1"\n          \n        },\n        {\n          "id": "EU",\n          "value": ".40",\n          "showLabel": "1"\n        },\n        {\n          "id": "AF",\n          "value": "2.58",\n          "showLabel": "1"\n        },\n        {\n          "id": "AU",\n          "value": "1.30",\n          "showLabel": "1"\n        }\n      ]\n    }\n    constructor(){}\n}\n`,
//     template: `<!-- in app.component.html -->\n<fusioncharts\n type="world"\n width="800"\n height="500"\n dataFormat="json"\n [dataSource]="dataSource"\n></fusioncharts>\n`
// };

// fcDemos['ex14'] =  {
//     title: 'Applying a different theme',
//     description: 'Choosing from different themes available in FusionCharts Suite',
//     module: `// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n\n// Load charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n\n// Load the theme file \nimport * as Gammel from 'fusioncharts/themes/fusioncharts.theme.gammel'\n\n// Add the dependencies in FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, Gammel)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
//     component: `// in app.component.ts\nimport { Component} from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n    dataSource = {\n      "chart": {\n        "caption": "Countries With Most Oil Reserves [2017-18]",\n        "subCaption": "In MMbbl = One Million barrels",\n        "xAxisName": "Country",\n        "yAxisName": "Reserves (MMbbl)",\n        "numberSuffix": "K",\n        "theme": "gammel" // <-- Add theme type here in chart attribute\n      },\n      "data": [\n        {\n          "label": "Venezuela",\n          "value": "290"\n        },\n        {\n          "label": "Saudi",\n          "value": "260"\n        },\n        {\n          "label": "Canada",\n          "value": "180"\n        },\n        {\n          "label": "Iran",\n          "value": "140"\n        },\n        {\n          "label": "Russia",\n          "value": "115"\n        },\n        {\n          "label": "UAE",\n          "value": "100"\n        },\n        {\n          "label": "US",\n          "value": "30"\n        },\n        {\n          "label": "China",\n          "value": "30"\n        }\n      ]\n    };\n    constructor(){}\n}\n`,
//     template: `<!-- in app.component.html -->\n<fusioncharts\n type="column2d"\n width="700"\n height="500"\n dataFormat="json"\n [dataSource]="dataSource"\n></fusioncharts>`
// };
// export default fcDemos;

var  fcDemos = {};

fcDemos['ex1'] =  {
    title: 'A Simple Chart',
    description: 'A simple chart with all data embedded into the directive',
    module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    component: `// In app.component.ts\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html'\n})\nexport class AppComponent { \n    dataSource: Object;\n    chartConfig: Object;\n\n    constructor() {\n         this.chartConfig = {\n            width: '700',\n            height: '400',\n            type: 'column2d',\n            dataFormat: 'json',\n        };\n\n        this.dataSource = {\n            "chart": {\n              "caption": "Countries With Most Oil Reserves [2017-18]",\n              "subCaption": "In MMbbl = One Million barrels",\n              "xAxisName": "Country",\n              "yAxisName": "Reserves (MMbbl)",\n              "numberSuffix": "K",\n              "theme": "fusion",\n            },\n            "data": [{\n              "label": "Venezuela",\n              "value": "290"\n            }, {\n              "label": "Saudi",\n              "value": "260"\n            }, {\n              "label": "Canada",\n              "value": "180"\n            }, {\n              "label": "Iran",\n              "value": "140"\n            }, {\n              "label": "Russia",\n              "value": "115"\n            }, {\n              "label": "UAE",\n              "value": "100"\n            }, {\n              "label": "US",\n              "value": "30"\n            }, {\n              "label": "China",\n              "value": "30"\n            }]\n          };\n\n    }\n}\n`,
    template: `<!-- in app.component.html -->\n<fusioncharts\n    [chartConfig]=chartConfig\n    [dataSource]=dataSource >\n</fusioncharts>`
};

fcDemos['ex2'] =  {
    title: 'A 3D Pie Chart',
    description:'A 3D pie chart using the datasource attribute from components scope',
    module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    component: `// in app.component.ts\nimport { Component } from '@angular/core';\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html'\n})\nexport class AppComponent {  \n    dataSource = {\n        "chart": {\n          "caption": "Recommended Portfolio Split",\n          "subCaption" : "For a net-worth of $1M",\n          "showValues":"1",\n          "showPercentInTooltip" : "0",\n          "numberPrefix" : "$",\n          "enableMultiSlicing":"1",\n          "theme": "fusion"\n        },\n        "data": [{\n          "label": "Equity",\n          "value": "300000"\n        }, {\n          "label": "Debt",\n          "value": "230000"\n        }, {\n          "label": "Bullion",\n          "value": "180000"\n        }, {\n          "label": "Real-estate",\n          "value": "270000"\n        }, {\n          "label": "Insurance",\n          "value": "20000"\n        }]\n    }\n}\n`,
    template: `<!-- in app.component.html -->\n<fusioncharts \n    width="600" \n    height="400"\n    type="pie3d"\n    [dataSource]=dataSource >\n</fusioncharts>`
};

fcDemos['ex3'] =  {
    title: 'A Column, Line and Area Combi Chart',
    description:'A combination chart of column, line and area',
    module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\n\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    component: `// in app.component.ts\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n    dataSource = {\n        "chart": {\n          "caption": "Expense Analysis",\n          "subCaption": "ACME Inc.",\n          "xAxisname": "Region",\n          "yAxisName": "Amount (In USD)",\n          "numberPrefix": "$",\n          "exportenabled": "1",\n          "theme": "fusion"\n        },\n        "categories": [{\n          "category": [{\n            "label": "East"\n          }, {\n            "label": "West"\n          }, {\n            "label": "South"\n          }, {\n            "label": "North"\n          }]\n        }],\n        "dataset": [{\n          "seriesName": "Actual Expenses",\n          "data": [{\n            "value": "1441290"\n          }, {\n            "value": "855912"\n          }, {\n            "value": "911404"\n          }, {\n            "value": "648136"\n          }]\n        }, {\n          "seriesName": "Budgeted Expenses",\n          "renderAs": "line",\n          "data": [{\n            "value": "1297430"\n          }, {\n            "value": "776485"\n          }, {\n            "value": "685352"\n          }, {\n            "value": "726791"\n          }]\n        }, {\n          "seriesName": "Unknown liabilities",\n          "renderAs": "area",\n          "showAnchors" : "0",\n          "data": [{\n            "value": "143860"\n          }, {\n            "value": "79427"\n          }, {\n            "value": "226052"\n          }, {\n            "value": "78655"\n          }]\n        }]\n      };\n\n    constructor () {\n    }\n}\n`,
    template: `<!-- in app.component.html -->\n<fusioncharts\n    width="600" \n    height="400"\n    type="mscombi2d"\n    [dataSource]=dataSource>\n</fusioncharts>`
};

fcDemos['ex4'] =  {
    module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme\)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    component: `// in app.component.ts\nimport {Component} from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n    dataSource = {\n        chart: {\n            caption: "Harry's SuperMart",\n            subCaption: "Top 5 stores in last month by revenue",\n            numberPrefix: "$",\n            theme: "ocean"\n        },\n        data:[{\n            label: "Bakersfield Central",\n            value: "880000"\n        },\n        {\n            label: "Garden Groove harbour",\n            value: "730000"\n        },\n        {\n            label: "Los Angeles Topanga",\n            value: "590000"\n        },\n        {\n            label: "Compton-Rancho Dom",\n            value: "520000"\n        },\n        {\n            label: "Daly City Serramonte",\n            value: "330000"\n        }]\n    };\n};\n`,
    template: `<!-- in app.component.html -->\n<fusioncharts\n    width="300" \n    height="200"\n    type="column2d"\n    [dataSource]=dataSource>\n</fusioncharts>\n\n<fusioncharts\n    width="300" \n    height="200"\n    type="column2d"\n    [dataSource]=dataSource>\n</fusioncharts>`
};

fcDemos['ex5'] =  {
    title: 'Fetch data from JSON URL',
    description:'Fetch data remotely from a JSON file or URL',
    module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme);\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    component: `// in app.component.ts\nimport {Component} from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n};\n\n`,
    template: `<!-- in app.component.html -->\n<fusioncharts \n    dataFormat="jsonurl"\n    dataSource="../data/data.json"\n    type="column2d"\n    width="600"\n    height="400">\n</fusioncharts>\n`
};

fcDemos['ex5a'] =  {
    title: 'Fetch data from a XML URL',
    description:'Fetch data remotely from a XML file or URL',
    module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme);\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    component: `// in app.component.ts\nimport {Component} from '@angular/core';\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html'\n})\n\nexport class AppComponent {\n};\n`,
    template: `<!-- in app.component.html -->\n<fusioncharts\n    dataFormat="xmlurl"\n    dataSource="data/data.xml"\n    type="column2d"\n    width="600"\n    height="400" >\n</fusioncharts>\n`
};

fcDemos['ex6'] =  {
    title: 'Update chart data',
    description:'Change the data dynamically in the component and watch the chart update automatically',
    module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    component: `// in app.component.ts\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html'\n})\n\nexport class AppComponent {\n\n    type = 'Column2D';\n    width = '600';\n    height = '300';\n    dataFormat = 'json';\n    dataSource: any = {\n        "chart": {\n          "caption": "Countries With Most Oil Reserves [2017-18]",\n          "subCaption": "In MMbbl = One Million barrels",\n          "xAxisName": "Country",\n          "yAxisName": "Reserves (MMbbl)",\n          "numberSuffix": "K",\n          "theme": "fusion",\n          "updateAnimDuration":"0.4"\n        },\n        "data": [{\n          "label": "Venezuela",\n          "value": "290"\n        }, {\n          "label": "Saudi",\n          "value": "260"\n        }, {\n          "label": "Canada",\n          "value": "180"\n        }, {\n          "label": "Iran",\n          "value": "140"\n        }, {\n          "label": "Russia",\n          "value": "115"\n        }, {\n          "label": "UAE",\n          "value": "100"\n        }, {\n          "label": "US",\n          "value": "30"\n        }, {\n          "label": "China",\n          "value": "30"\n        }]\n    };\n\n    //This function generates random number to update the chart data.\n    getRandomNumber = function () {\n        var max = 290, min = 30;\n        return Math.round(((max - min) * Math.random()) + min);\n    }\n    updateMyChartData() {\n        this.dataSource.data[2].value = this.getRandomNumber();\n        this.dataSource.data[3].value = this.getRandomNumber();\n    }\n\n    constructor () {\n\n    }\n}\n`,
    template: `<!-- in app.component.html -->\n<style >\n    .btn { font-family: 'Source Sans Pro'; }\n    .btn.btn-primary { background: #4a4d8c;  transition: all 300ms;}\n    .btn.btn-primary:hover{ background: #5c62b5; }\n    .btn.btn-primary:active{ background:#4a4d8c }\n\n</style>\n<fusioncharts\n    width={{width}}\n    height={{height}}\n    type={{type}}\n    dataFormat={{dataFormat}}\n    [dataSource]=dataSource >\n</fusioncharts>\n\n<div style='display: flex; justify-content: center'><a class="btn btn-primary" (click)="updateMyChartData()">Click me to change data</a></div>\n`
};

fcDemos['ex7'] =  {
    title: 'Listen to events from chart',
    description: 'Bind event listener to the chart and get the related event data',
    module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme);\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    component: `// In app.component.ts\nimport {\n  Component,\n  NgZone\n} from '@angular/core';\n\n@Component({\n  selector: 'app',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n\n  dataSource = {\n    "chart": {\n      "caption": "Countries With Most Oil Reserves [2017-18]",\n      "subCaption": "In MMbbl = One Million barrels",\n      "xAxisName": "Country",\n      "yAxisName": "Reserves (MMbbl)",\n      "numberSuffix": "K",\n      "theme": "fusion",\n    },\n    "data": [{\n      "label": "Venezuela",\n      "value": "290"\n    }, {\n      "label": "Saudi",\n      "value": "260"\n    }, {\n      "label": "Canada",\n      "value": "180"\n    }, {\n      "label": "Iran",\n      "value": "140"\n    }, {\n      "label": "Russia",\n      "value": "115"\n    }, {\n      "label": "UAE",\n      "value": "100"\n    }, {\n      "label": "US",\n      "value": "30"\n    }, {\n      "label": "China",\n      "value": "30"\n    }]\n  };\n\n  selectedLabel = "";\n  selectedValue = "";\n\n  update($event) {\n    // Run inside angular context\n    this.zone.run(() => {\n      this.selectedLabel = $event.dataObj.categoryLabel;\n      this.selectedValue = $event.dataObj.displayValue;\n    })\n  }\n  constructor(private zone: NgZone) {}\n}\n`,
    template: `<!-- in app.component.html--><div class="card shadow">\n    <div class="card-body chart-wrapper">\n        <div class="chart-wrapper-inner">\n            <fusioncharts\n                width="100%" \n                height="400"\n                type="column2d"\n                [dataSource]="dataSource"\n                [events]="events"\n                (dataplotRollOver)="update($event)">    <!-- Added event listener to attach update function from component -->\n            </fusioncharts>\n            <p style="font-size:20px;font-weight: 300;">You're are currently hovering over <u>{{selectedLabel || "______"}}</u> whose value is <u>{{selectedValue || "_______"}} </u></p>\n        </div>\n    </div>\n</div>\n`
};

fcDemos['ex8'] =  {
    title: 'Update chart attribute',
    description: 'Change a parameter in the components variable and see it automatically update the chart',
    module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme);\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    component: `// in app.component.ts\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html',\n\n})\n\nexport class AppComponent {\n\n    dataSource = {\n        "chart": {\n          "caption": "Countries With Most Oil Reserves [2017-18]",\n          "subCaption": "In MMbbl = One Million barrels",\n          "xAxisName": "Country",\n          "yAxisName": "Reserves (MMbbl)",\n          "numberSuffix": "K",\n          "theme": "fusion",\n        },\n        "data": [{\n          "label": "Venezuela",\n          "value": "290"\n        }, {\n          "label": "Saudi",\n          "value": "260"\n        }, {\n          "label": "Canada",\n          "value": "180"\n        }, {\n          "label": "Iran",\n          "value": "140"\n        }, {\n          "label": "Russia",\n          "value": "115"\n        }, {\n          "label": "UAE",\n          "value": "100"\n        }, {\n          "label": "US",\n          "value": "30"\n        }, {\n          "label": "China",\n          "value": "30"\n        }]\n    };\n\n    changeBackgroundColor = function () {\n        this.dataSource.chart.bgColor = "#efefef";\n    };\n\n    changeCaptionTextAlignment = function () {\n        this.dataSource.chart.captionAlignment = "left";\n    };\n\n    constructor () {\n\n    }\n\n}\n`,
    template: `<!-- in app.component.html -->\n<fusioncharts\n    width="100%" \n    height="400"\n    type="column2d"\n    [dataSource]="dataSource" >\n</fusioncharts>\n<div style="display: flex; justify-content: center">\n    <a class="btn btn-outline-secondary btn-sm" (click)="changeBackgroundColor()">Change chart background color</a>\n    <a class="btn btn-outline-secondary btn-sm" (click)="changeCaptionTextAlignment()">Make Caption text left-aligned</a>\n    <a class="btn btn-outline-danger btn-sm" (click)="reset()">Reset</a>\n</div>`
};

fcDemos['_ex9'] =  {
    module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    component: `import {Component} from '@angular/core';\n\n@Component({\n    selector: 'chart',\n    templateUrl: 'ex9.html'\n})\n\nexport class Ex9 {\n    demoId = 'ex9';\n\n    dataSource = {\n        chart: {\n            "caption": "Sales - 2012 v 2013",\n            "numberprefix": "$",\n            "plotgradientcolor": "",\n            "bgcolor": "FFFFFF",\n            "showalternatehgridcolor": "0",\n            "divlinecolor": "CCCCCC",\n            "showvalues": "0",\n            "showcanvasborder": "0",\n            "canvasborderalpha": "0",\n            "canvasbordercolor": "CCCCCC",\n            "canvasborderthickness": "1",\n            "yaxismaxvalue": "30000",\n            "captionpadding": "30",\n            "linethickness": "3",\n            "yaxisvaluespadding": "15",\n            "legendshadow": "0",\n            "legendborderalpha": "0",\n            "palettecolors": "#f8bd19,#008ee4,#33bdda,#e44a00,#6baa01,#583e78",\n            "showborder": "0"\n        },\n\n        categories: [\n            {\n                "category": [\n                    {\n                        "label": "Jan"\n                    },\n                    {\n                        "label": "Feb"\n                    },\n                    {\n                        "label": "Mar"\n                    },\n                    {\n                        "label": "Apr"\n                    },\n                    {\n                        "label": "May"\n                    },\n                    {\n                        "label": "Jun"\n                    },\n                    {\n                        "label": "Jul"\n                    },\n                    {\n                        "label": "Aug"\n                    },\n                    {\n                        "label": "Sep"\n                    },\n                    {\n                        "label": "Oct"\n                    },\n                    {\n                        "label": "Nov"\n                    },\n                    {\n                        "label": "Dec"\n                    }\n                ]\n            }\n        ],\n\n        dataset: [\n            {\n                "seriesname": "2013",\n                "data": [\n                    {\n                        "value": "22400"\n                    },\n                    {\n                        "value": "24800"\n                    },\n                    {\n                        "value": "21800"\n                    },\n                    {\n                        "value": "21800"\n                    },\n                    {\n                        "value": "24600"\n                    },\n                    {\n                        "value": "27600"\n                    },\n                    {\n                        "value": "26800"\n                    },\n                    {\n                        "value": "27700"\n                    },\n                    {\n                        "value": "23700"\n                    },\n                    {\n                        "value": "25900"\n                    },\n                    {\n                        "value": "26800"\n                    },\n                    {\n                        "value": "24800"\n                    }\n                ]\n            },\n            {\n                "seriesname": "2012",\n                "data": [\n                    {\n                        "value": "10000"\n                    },\n                    {\n                        "value": "11500"\n                    },\n                    {\n                        "value": "12500"\n                    },\n                    {\n                        "value": "15000"\n                    },\n                    {\n                        "value": "16000"\n                    },\n                    {\n                        "value": "17600"\n                    },\n                    {\n                        "value": "18800"\n                    },\n                    {\n                        "value": "19700"\n                    },\n                    {\n                        "value": "21700"\n                    },\n                    {\n                        "value": "21900"\n                    },\n                    {\n                        "value": "22900"\n                    },\n                    {\n                        "value": "20800"\n                    }\n                ]\n            }\n        ]\n    }\n}\n`,
    template: `<!-- in app.component.html -->\n<fusioncharts\n    width="600" \n    height="400"\n    type="msline"\n    dataFormat="json"\n    [dataSource]="dataSource" >\n</fusioncharts>\n`
};

fcDemos['ex9'] =  {
    title: 'Percentage Calculation',
    description: 'Hover on a plot to see the percentage value with respect to total',
    module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    component: `// in app.component.ts\nimport { Component, AfterViewInit, NgZone} from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html'\n})\n\nexport class AppComponent {\n\n    logMessage = 'Hover on the plot to see the percentage of a column wrt total';\n\n    dataSource = {\n        "chart": {\n          "caption": "Countries With Most Oil Reserves [2017-18]",\n          "subCaption": "In MMbbl = One Million barrels",\n          "xAxisName": "Country",\n          "yAxisName": "Reserves (MMbbl)",\n          "numberSuffix": "K",\n          "theme": "fusion",\n        },\n        "data": [{\n          "label": "Venezuela",\n          "value": "290"\n        }, {\n          "label": "Saudi",\n          "value": "260"\n        }, {\n          "label": "Canada",\n          "value": "180"\n        }, {\n          "label": "Iran",\n          "value": "140"\n        }, {\n          "label": "Russia",\n          "value": "115"\n        }, {\n          "label": "UAE",\n          "value": "100"\n        }, {\n          "label": "US",\n          "value": "30"\n        }, {\n          "label": "China",\n          "value": "30"\n        }]\n    };\n\n    total: number;\n\n    getPercentValue() {\n        return (eve,  arg) => {\n            this.zone.run(() => {\n                \n                let value = (arg.value / this.total * 100).toFixed(2);\n                this.logMessage = arg.categoryLabel + " is  " + value + "% of the total";\n            })\n        }\n    }\n\n    events = {\n        dataPlotRollOver: this.getPercentValue()\n    }\n\n    constructor (private zone:NgZone) {\n        let myData = this.dataSource.data;\n\n        this.total = 0;\n\n        // Calculate the sum of all values\n        for (let i = 0; i < myData.length; i++) {\n            this.total += Number(myData[i].value);\n        }\n    \n    }\n\n   \n}\n`,
    template: `<!-- in app.component.html -->\n<style type="text/css">\n    .log-pane {\n        padding-top: 10px;\n        padding-right: 10px;\n        padding-bottom: 10px;\n        padding-left: 10px;\n        border: 2px solid black;\n        font-size: 20px;\n    }    \n</style>\n\n<fusioncharts\n     width="1000"\n     height="550"\n     type="column2d"\n     [events]="events"\n     [dataSource]="myDataSource">\n</fusioncharts>\n\n<div class='log-pane'>{{logMessage}}</div>`
};

fcDemos['ex10'] =  {
    title: 'Export multiple charts',
    description: 'Use Batch Export Feature to export multiple charts as a single image/PDF',
    module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme);\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    component: `// in app.component.ts\nimport { Component } from '@angular/core';\nimport * as FusionCharts from 'fusioncharts';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html',\n})\n\nexport class Ex10 {\n    dataSource = {\n        "chart": {\n          "caption": "Countries With Most Oil Reserves [2017-18]",\n          "subCaption": "In MMbbl = One Million barrels",\n          "xAxisName": "Country",\n          "yAxisName": "Reserves (MMbbl)",\n          "numberSuffix": "K",\n          "theme": "fusion",\n        },\n        "data": [{\n          "label": "Venezuela",\n          "value": "290"\n        }, {\n          "label": "Saudi",\n          "value": "260"\n        }, {\n          "label": "Canada",\n          "value": "180"\n        }, {\n          "label": "Iran",\n          "value": "140"\n        }, {\n          "label": "Russia",\n          "value": "115"\n        }, {\n          "label": "UAE",\n          "value": "100"\n        }, {\n          "label": "US",\n          "value": "30"\n        }, {\n          "label": "China",\n          "value": "30"\n        }]\n    };\n\n    stackedColumnData = {\n      chart: {\n        caption: "Yearly Energy Production Rate",\n        subCaption: " Top 5 Developed Countries",\n        numbersuffix: " TWh",\n        showSum: "1",\n        plotToolText:\n          "$label produces <b>$dataValue</b> of energy from $seriesName",\n        theme: "fusion"\n      },\n      categories: [\n        {\n          category: [\n            {\n              label: "Canada"\n            },\n            {\n              label: "China"\n            },\n            {\n              label: "Russia"\n            },\n            {\n              label: "Australia"\n            },\n            {\n              label: "United States"\n            },\n            {\n              label: "France"\n            }\n          ]\n        }\n      ],\n      dataSet: [\n        {\n          seriesName: "Coal",\n          data: [\n            {\n              value: "400"\n            },\n            {\n              value: "830"\n            },\n            {\n              value: "500"\n            },\n            {\n              value: "420"\n            },\n            {\n              value: "790"\n            },\n            {\n              value: "380"\n            }\n          ]\n        },\n        {\n          seriesName: "Hydro",\n          data: [\n            {\n              value: "350"\n            },\n            {\n              value: "620"\n            },\n            {\n              value: "410"\n            },\n            {\n              value: "370"\n            },\n            {\n              value: "720"\n            },\n            {\n              value: "310"\n            }\n          ]\n        },\n        {\n          seriesName: "Nuclear",\n          data: [\n            {\n              value: "210"\n            },\n            {\n              value: "400"\n            },\n            {\n              value: "450"\n            },\n            {\n              value: "180"\n            },\n            {\n              value: "570"\n            },\n            {\n              value: "270"\n            }\n          ]\n        },\n        {\n          seriesName: "Gas",\n          data: [\n            {\n              value: "180"\n            },\n            {\n              value: "330"\n            },\n            {\n              value: "230"\n            },\n            {\n              value: "160"\n            },\n            {\n              value: "440"\n            },\n            {\n              value: "350"\n            }\n          ]\n        },\n        {\n          seriesName: "Oil",\n          data: [\n            {\n              value: "60"\n            },\n            {\n              value: "200"\n            },\n            {\n              value: "200"\n            },\n            {\n              value: "50"\n            },\n            {\n              value: "230"\n            },\n            {\n              value: "150"\n            }\n          ]\n        }\n      ]\n    }\n\n    exportChart(e){      \n      FusionCharts.batchExport({\n        exportFormat:'pdf'\n      })\n    }\n\n    constructor () {\n    }\n\n}\n`,
    template: `<!-- in app.component.html -->\n<style >\n    .btn { font-family: 'Source Sans Pro'; }\n    .btn.btn-primary { background: #4a4d8c;  transition: all 300ms;}\n    .btn.btn-primary:hover{ background: #5c62b5; }\n    .btn.btn-primary:active{ background:#4a4d8c }\n    div > a {margin: 0px 10px;}\n</style>\n\n<fusioncharts\n   width="700"\n   height="400"\n   type="column2D"\n   [dataSource]="dataSource"\n   >\n</fusioncharts>\n\n<fusioncharts\n   width="600"\n   height="600"\n   type="stackedcolumn2d"\n   dataFormat="json"\n   [dataSource]="stackedColumnData">\n</fusioncharts>\n\n<div style="display: flex;justify-content: center">\n    <button (click)="exportChart($event)" class="btn btn-primary">Export both charts as a single PDF</button>\n</div>\n\n\n\n`
};

fcDemos['ex11'] =  {
    title: 'Add drill-down to chart',
    description: 'Use LinkedCharts to quickly add drill-down to charts',
    module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme);\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    component: `// In app.component.ts \nimport { Component, NgZone} from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n    \n    chartInstance: any = {};    \n    initialized(e){\n        this.chartInstance = e.chart;\n        // Configure the drill down chart\n        this.chartInstance.configureLink({\n            type: "pie2d",\n            width: "100%",\n            overlayButton: {\n                message: 'Back',\n                fontColor: '880000',\n                bgColor: 'FFEEEE',\n                borderColor: '660000'\n            }\n        });\n    }\n    \n    dataSource = {\n        "chart": {\n            "caption": "Sales of top 3 juice flavors last year",\n            "subcaption": "Click on a column to see details",\n            "xaxisname": "Flavor",\n            "yaxisname": "Amount (In USD)",\n            "numberprefix": "$",\n            "theme": "fusion",\n            "rotateValues": "0"\n        },\n      "data": [\n          {\n              "label": "Apple",\n              "value": "810000",\n              "link": "newchart-xml-apple"\n            },\n            {\n                "label": "Cranberry",\n                "value": "620000",\n                "link": "newchart-xml-cranberry"\n            },\n            {\n                "label": "Grape",\n                "value": "350000",\n                "link": "newchart-xml-grapes"\n            }],\n        "linkeddata": [\n            {\n                "id": "apple",\n                "linkedchart": {\n                    "chart": {\n                    "caption": "Apple Juice - Quarterly Sales",\n                    "subcaption": "Last year",\n                    "numberprefix": "$",\n                    "theme": "fusion",\n                    "rotateValues": "0",\n                    "plottooltext": "$label, $dataValue,  $percentValue"\n                },\n                "data": [{\n                    "label": "Q1",\n                    "value": "157000"\n                }, {\n                    "label": "Q2",\n                    "value": "172000"\n                }, {\n                    "label": "Q3",\n                    "value": "206000"\n                }, {\n                    "label": "Q4",\n                    "value": "275000"\n                }]\n            }\n        },\n          {\n              "id": "cranberry",\n              "linkedchart": {\n              "chart": {\n                  "caption": "Cranberry Juice - Quarterly Sales",\n                  "subcaption": "Last year",\n                  "numberprefix": "$",\n                  "theme": "fusion",\n                  "plottooltext": "$label, $dataValue,  $percentValue"\n              },\n              "data": [\n                  {\n                      "label": "Q1",\n                      "value": "102000"\n                },\n                {\n                  "label": "Q2",\n                  "value": "142000"\n                },\n                {\n                  "label": "Q3",\n                  "value": "187000"\n                },\n                {\n                    "label": "Q4",\n                    "value": "189000"\n                }]\n            }\n        },\n        {\n            "id": "grapes",\n            "linkedchart": {\n                "chart": {\n                    "caption": "Grape Juice - Quarterly Sales",\n                    "subcaption": "Last year",\n                    "numberprefix": "$",\n                    "theme": "fusion",\n                    "rotateValues": "0",\n                    "plottooltext": "$label, $dataValue,  $percentValue"\n                },\n                "data": [{\n                    "label": "Q1",\n                    "value": "45000"\n                }, {\n                    "label": "Q2",\n                    "value": "72000"\n                }, {\n                    "label": "Q3",\n                    "value": "95000"\n                }, {\n                    "label": "Q4",\n                    "value": "108000"\n                }]\n            }\n          }\n        ]\n    };\n    \n    constructor(private zone:NgZone){}\n}\n`,
    template: `<!-- In app.component.html -->\n<fusioncharts\n  type="column2d"\n  width="100%"\n  height="400"\n  dataFormat="json"\n  [dataSource]="dataSource"\n  (initialized)="initialized($event)"> <!-- Listen to initialized event to get the chart instance -->\n</fusioncharts>\n`
};

fcDemos['ex12'] =  {
    title: 'A simple gauge',
    description: 'A simple gauge to show customer satisfaction score',
    module:`// Setup needed in app.module.ts\n\nimport { NgModule } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n\n// Load Widgets\nimport * as Widgets from 'fusioncharts/fusioncharts.widgets';\n\n// Load FusionTheme Theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Widgets, FusionTheme);\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n\n}\n`,
    component: `// in app.component.ts\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n  dataSource = {\n    "chart": {\n        "caption": "Nordstorm's Customer Satisfaction Score for 2017",\n        "lowerLimit": "0",\n        "upperLimit": "100",\n        "showValue": "1",\n        "numberSuffix": "%",\n        "theme": "fusion",\n        "showToolTip": "0"\n    },\n    "colorRange": {\n        "color": [{\n            "minValue": "0",\n            "maxValue": "50",\n            "code": "#F2726F"\n        }, {\n            "minValue": "50",\n            "maxValue": "75",\n            "code": "#FFC533"\n        }, {\n            "minValue": "75",\n            "maxValue": "100",\n            "code": "#62B58F"\n        }]\n    },\n    "dials": {\n          "dial": [{\n              "value": "81"\n          }]\n    }\n  }\n\n  constructor(){}\n\n}\n`,
    template: `<!-- in app.component.html -->\n<fusioncharts\n type="angulargauge"\n width="450"\n height="250"\n dataFormat="json"\n [dataSource]="dataSource"\n></fusioncharts>\n`
};

fcDemos['ex13'] =  {
    title: 'World Map',
    description: 'World map showing data for different continents',
    module: `// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n\n// Load Maps  \nimport * as Maps from 'fusioncharts/fusioncharts.maps';\n\n// Load WorldMap definition\nimport * as World from 'fusioncharts/maps/fusioncharts.world';\n\n// Load FusionTheme theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\n// Add dependencies for FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Maps, World, FusionTheme)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    component: `// in app.component.ts\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html'\n})\n\nexport class AppComponent {\n    dataSource = {\n      "chart": {\n        "caption": "Average Annual Population Growth",\n        "subcaption": " 1955-2015",\n        "numbersuffix": "%",\n        "includevalueinlabels": "1",\n        "labelsepchar": ": ",\n        "entityFillHoverColor": "#FFF9C4",\n        "theme": "fusion"\n      },\n      "colorrange": {\n        "minvalue": "0",\n        "code": "#FFE0B2",\n        "gradient": "1",\n        "color": [\n    \n          {\n            "minvalue": "0.5",\n            "maxvalue": "1.0",\n            "color": "#FFD74D"\n          },\n          {\n            "minvalue": "1.0",\n            "maxvalue": "2.0",\n            "color": "#FB8C00"\n          },\n          {\n            "minvalue": "2.0",\n            "maxvalue": "3.0",\n            "color": "#E65100"\n          }\n        ]\n      },\n      "data": [{\n          "id": "NA",\n          "value": ".82",\n          "showLabel": "1"\n          \n        },\n        {\n          "id": "SA",\n          "value": "2.04",\n          "showLabel": "1"\n        },\n        {\n          "id": "AS",\n          "value": "1.78",\n          "showLabel": "1"\n          \n        },\n        {\n          "id": "EU",\n          "value": ".40",\n          "showLabel": "1"\n        },\n        {\n          "id": "AF",\n          "value": "2.58",\n          "showLabel": "1"\n        },\n        {\n          "id": "AU",\n          "value": "1.30",\n          "showLabel": "1"\n        }\n      ]\n    }\n    constructor(){}\n}\n`,
    template: `<!-- in app.component.html -->\n<fusioncharts\n type="world"\n width="800"\n height="500"\n dataFormat="json"\n [dataSource]="dataSource"\n></fusioncharts>\n`
};

fcDemos['ex14'] =  {
    title: 'Applying a different theme',
    description: 'Choosing from different themes available in FusionCharts Suite',
    module: `// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n\n// Load column2d module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n\n// Load the theme file \nimport * as Gammel from 'fusioncharts/themes/fusioncharts.theme.gammel'\n\n// Add the dependencies in FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, Gammel);\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    component: `// in app.component.ts\nimport { Component} from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n    dataSource = {\n      "chart": {\n        "caption": "Countries With Most Oil Reserves [2017-18]",\n        "subCaption": "In MMbbl = One Million barrels",\n        "xAxisName": "Country",\n        "yAxisName": "Reserves (MMbbl)",\n        "numberSuffix": "K",\n        "theme": "gammel" // <-- Add theme type here in chart attribute\n      },\n      "data": [\n        {\n          "label": "Venezuela",\n          "value": "290"\n        },\n        {\n          "label": "Saudi",\n          "value": "260"\n        },\n        {\n          "label": "Canada",\n          "value": "180"\n        },\n        {\n          "label": "Iran",\n          "value": "140"\n        },\n        {\n          "label": "Russia",\n          "value": "115"\n        },\n        {\n          "label": "UAE",\n          "value": "100"\n        },\n        {\n          "label": "US",\n          "value": "30"\n        },\n        {\n          "label": "China",\n          "value": "30"\n        }\n      ]\n    };\n    constructor(){}\n}\n`,
    template: `<!-- in app.component.html -->\n<fusioncharts\n type="column2d"\n width="700"\n height="500"\n dataFormat="json"\n [dataSource]="dataSource"\n></fusioncharts>`
};

fcDemos['ex15'] =  {
    title: 'Render Alert',
    description: 'Show a message that the chart is rendered on the ‘rendered’ event',
    module: `// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme);\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    component: `// in app.component.ts\nimport { Component, NgZone} from '@angular/core';\n@Component({\n  selector: 'app',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n  dataSource: any;\n  message: any;\n  constructor(private zone:NgZone){\n    this.dataSource = {\n      "chart": {\n        "caption": "Countries With Most Oil Reserves [2017-18]",\n        "subCaption": "In MMbbl = One Million barrels",\n        "xAxisName": "Country",\n        "yAxisName": "Reserves (MMbbl)",\n        "numberSuffix": "K",\n        "theme": "fusion",\n      },\n      "data": [{\n        "label": "Venezuela",\n        "value": "290"\n      }, {\n        "label": "Saudi",\n        "value": "260"\n      }, {\n        "label": "Canada",\n        "value": "180"\n      }, {\n        "label": "Iran",\n        "value": "140"\n      }, {\n        "label": "Russia",\n        "value": "115"\n      }, {\n        "label": "UAE",\n        "value": "100"\n      }, {\n        "label": "US",\n        "value": "30"\n      }, {\n        "label": "China",\n        "value": "30"\n      }]\n    };\n  }\n\n  chartRender($event){\n    this.zone.run(() => {\n      this.message = 'Chart has completed rendering.';\n    })\n  }\n\n}\n`,
    template: `<!-- in app.component.html -->\n<div class="card shadow">\n  <div class="card-body chart-wrapper">\n    <div class="chart-wrapper-inner">\n        <fusioncharts\n          type="column2d"\n          width="100%"\n          height="400"\n          dataFormat="json"\n          [dataSource]="dataSource"\n          (rendered)="chartRender($event)">\n        </fusioncharts>\n        <p style="padding: 10px;background:#f5f2f0">{{message || 'You will see a notification here after chart completes rendering.'}}</p>\n    </div>\n  </div>\n</div>\n`
};

fcDemos['ex16'] =  {
    title: 'Special Events',
    description: 'Drag a column to see its change',
    module: `// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load PowerCharts module\nimport * as Powercharts from 'fusioncharts/fusioncharts.powercharts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Powercharts, FusionTheme);\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    component: `// In app.component.ts\nimport {\n  Component,\n  NgZone\n} from '@angular/core';\n\n@Component({\n  selector: 'app',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  dataSource: any;\n  datasetname: any;\n  startvalue: any;\n  finalvalue: any;\n  message: any;\n\n  // Format message\n  getMessage(datasetname, startvalue, finalvalue, label){\n   return \`<b style='font-weight:bold';>\${datasetname}</b> dataset, its previous value was <b style='font-weight:bold'>\${startvalue}</b> and its current value is <b style='font-weight:bold'>\${finalvalue}</b> for year \${label}\`;\n  }\n\n  constructor(private zone: NgZone) {\n    this.dataSource = {\n      "chart": {\n          "caption": "Android and iOS Devices Sales Projections",\n          "subCaption": "Drag the top of columns to adjust projections for 2017 & 2018",\n          "numberPrefix": "$",\n          "numberSuffix": "M",\n          "yaxismaxvalue": "200",\n          "theme": "fusion",\n          "plotToolText": "<b>$label</b><br>$seriesName: <b>$dataValue</b>"\n      },\n      "categories": [{\n          "category": [{\n              "label": "2014",\n              "fontItalic": "0"\n          }, {\n              "label": "2015",\n              "fontItalic": "0"\n          }, {\n              "label": "2016",\n              "fontItalic": "0"\n          }, {\n              "label": "2017 (Projected)"\n          }, {\n              "label": "2018 (Projected)"\n          }]\n      }],\n      "dataset": [{\n          "seriesname": "Android Devices",\n          "data": [{\n              "value": "73",\n              "alpha": "100",\n              "allowDrag": "0"\n          }, {\n              "value": "80",\n              "alpha": "100",\n              "allowDrag": "0"\n          }, {\n              "value": "97",\n              "alpha": "100",\n              "allowDrag": "0"\n          }, {\n              "value": "110",\n              "toolText": "<b>$label</b><br>$seriesName: <b>$dataValue</b>"\n          }, {\n              "value": "180",\n              "toolText": "<b>$label</b><br>$seriesName: <b>$dataValue</b>"\n          }]\n      }, {\n          "seriesname": "iOS Devices",\n          "data": [{\n              "value": "63.2",\n              "alpha": "100",\n              "allowDrag": "0"\n          }, {\n              "value": "68",\n              "alpha": "100",\n              "allowDrag": "0"\n          }, {\n              "value": "82",\n              "alpha": "100",\n              "allowDrag": "0"\n          }, {\n              "value": "99",\n              "toolText": "<b>$label</b><br>$seriesName: <b>$dataValue</b>"\n          }, {\n              "value": "150",\n              "toolText": "<b>$label</b><br>$seriesName: <b>$dataValue</b>"\n          }]\n      }]\n    };\n\n    this.message = "Drag any column for years 2017 or 2018 to see updated value along with the label";\n  }\n\n  dragStart($event){\n    let dataObj = $event.dataObj;\n    this.datasetname = dataObj.datasetName;\n    this.startvalue = dataObj.startValue;\n  }\n\n  dragEnd($event){\n    let dataObj = $event.dataObj;\n    this.finalvalue = dataObj.endValue;\n    let label = this.dataSource.categories[0].category[dataObj.dataIndex].label;\n    this.zone.run(() => {\n      this.message = this.getMessage(this.datasetname, this.startvalue.toFixed(2), this.finalvalue.toFixed(2), label);\n    })\n  }\n}\n`,
    template: `<!-- in app.component.html -->\n<fusioncharts\n  type="dragcolumn2d"\n  width="100%"\n  height="400"\n  dataFormat="json"\n  [dataSource]="dataSource"\n  (dataplotDragStart)="dragStart($event)"\n  (dataplotDragEnd)="dragEnd($event)">\n</fusioncharts>\n<p style="padding: 10px;background:#f5f2f0">{{message}}</p>\n`
};


fcDemos['ex17'] =  {
    title: 'Dynamically add chart event listener',
    description: 'How you can dynamically(runtime) add & remove chart specific events in FusionCharts',
    module: `// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load fusion theme\nimport * as FusionTheme from 'fusioncharts/themes/es/fusioncharts.theme.fusion'\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(FusionCharts, Charts, FusionTheme)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    component: `// In app.component.ts\nimport {\n  Component,\n  NgZone\n} from '@angular/core';\n\n\n@Component({\n  selector: 'app',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent{\n  dataSource: any;\n  message: string;\n  chartObj: any;\n  handler:any;\n  initMessage:any;\n  iMsg:string;\n  clickPlotMsg:string;\n  attached: boolean;\n  constructor(private zone: NgZone) {\n    this.iMsg = 'Click on <b>Track Data Plot Clicks</b> button to listen to dataplotclick event';\n    this.initMessage = this.iMsg;\n    this.clickPlotMsg = 'Click on the plot to see the value along with the label';\n    this.message = this.clickPlotMsg;\n    this.attached = false;\n    this.dataSource = {\n      "chart": {\n          "caption": "Countries With Most Oil Reserves [2017-18]",\n          "subCaption": "In MMbbl = One Million barrels",\n          "xAxisName": "Country",\n          "yAxisName": "Reserves (MMbbl)",\n          "numberSuffix": "K",\n          "theme": "fusion"\n      },\n      "data": [\n          {\n              "label": "Venezuela",\n              "value": "290"\n          },\n          {\n              "label": "Saudi",\n              "value": "260"\n          },\n          {\n              "label": "Canada",\n              "value": "180"\n          },\n          {\n              "label": "Iran",\n              "value": "140"\n          },\n          {\n              "label": "Russia",\n              "value": "115"\n          },\n          {\n              "label": "UAE",\n              "value": "100"\n          },\n          {\n              "label": "US",\n              "value": "30"\n          },\n          {\n              "label": "China",\n              "value": "30"\n          }\n      ]\n    };\n  }\n\n  getMessage(dataObj){\n    return \`You have clicked on plot <b style='font-weight:bold'>\${dataObj.categoryLabel}</b> which has a value of <b style='font-weight:bold'>\${dataObj.displayValue}</b>\`\n  }\n\n  dataplotClickHandler(eventObj, dataObj){\n    this.zone.run(() => {\n      this.message = this.getMessage(dataObj);\n    });\n  }\n\n  initialized($event){\n    this.chartObj = $event.chart;\n  }\n\n  attachEvent(){\n    this.handler = this.dataplotClickHandler.bind(this);\n    this.initMessage = '';\n    this.message = this.clickPlotMsg;\n    this.attached = true;\n    this.chartObj.addEventListener('dataplotClick',this.handler);\n  }\n\n  removeEvent(){\n    this.initMessage = this.iMsg;\n    this.message = this.clickPlotMsg;\n    this.attached = false;\n    this.chartObj.removeEventListener('dataplotClick', this.handler);\n  }\n}\n`,
    template: `<!-- In app.component.html -->\n<style >\n    .btn.btn-outline-secondary.btn-sm:hover{\n        color:white;\n    }\n    .btn.btn-outline-secondary.btn-sm:active{\n        color:gray;\n    }\n    div>a{\n        margin: 0px 10px;\n    }\n</style>\n\n<div class="card shadow">\n  <div class="card-body chart-wrapper">\n    <div class="chart-wrapper-inner">\n        <fusioncharts\n          width="100%" \n          height="400"\n          type="column2d"\n          [dataSource]=dataSource\n          (initialized)="initialized($event)">\n        </fusioncharts>\n\n      <p style="padding:10px; background: #efefef" [innerHTML]="initMessage || message"></p>\n      <p>\n        <button class="btn btn-outline-secondary btn-sm" (click)="attachEvent()" [disabled]="attached">ADD/LISTEN TO DATAPLOTCLICK EVENT</button>\n        <button class="btn btn-outline-secondary btn-sm" (click)="removeEvent()" [disabled]="!attached">REMOVE DATAPLOTCLICK EVENT</button>\n      </p>\n    </div>\n  </div>\n</div>\n\n`
};

fcDemos['ex18'] =  {
    title: 'Applying a different theme',
    description: 'Choosing from different themes available in FusionCharts Suite',
    module: `// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load themes\nimport * as Ocean from 'fusioncharts/themes/fusioncharts.theme.ocean';\nimport * as Fint from 'fusioncharts/themes/fusioncharts.theme.fint';\nimport * as Candy from 'fusioncharts/themes/fusioncharts.theme.candy';\nimport * as Gammel from 'fusioncharts/themes/fusioncharts.theme.gammel';\nimport * as Zune from 'fusioncharts/themes/fusioncharts.theme.zune';\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\nimport * as Carbon from 'fusioncharts/themes/fusioncharts.theme.carbon';\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(\n  FusionCharts,\n  Charts,\n  Ocean,\n  Fint,\n  Candy,\n  Gammel,\n  Zune,\n  Carbon,\n  FusionTheme\n)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    component: `// in app.component.ts\nimport {\n  Component,\n  NgZone\n} from '@angular/core';\n\n@Component({\n  selector: 'app',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  dataSource: any;\n  chartObj: any;\n  theme: string = 'fusion';\n  constructor(private zone: NgZone) {\n    this.dataSource = {\n      "chart": {\n          "caption": "Countries With Most Oil Reserves [2017-18]",\n          "subCaption": "In MMbbl = One Million barrels",\n          "xAxisName": "Country",\n          "yAxisName": "Reserves (MMbbl)",\n          "numberSuffix": "K",\n          "theme": "fusion"\n      },\n      "data": [\n          {\n              "label": "Venezuela",\n              "value": "290"\n          },\n          {\n              "label": "Saudi",\n              "value": "260"\n          },\n          {\n              "label": "Canada",\n              "value": "180"\n          },\n          {\n              "label": "Iran",\n              "value": "140"\n          },\n          {\n              "label": "Russia",\n              "value": "115"\n          },\n          {\n              "label": "UAE",\n              "value": "100"\n          },\n          {\n              "label": "US",\n              "value": "30"\n          },\n          {\n              "label": "China",\n              "value": "30"\n          }\n      ]\n    };\n  }\n\n  initialized($event){\n    this.chartObj = $event.chart;\n  }\n  onSelectionChange(theme){\n    this.theme = theme;\n    this.chartObj.setChartAttribute('theme', this.theme);\n  }\n}\n`,
    template: `<!-- in app.component.html -->\n\n<fusioncharts \n  width="100%" \n  height="400" \n  type="column2d" \n  [dataSource]=dataSource \n  (initialized)="initialized($event)">\n</fusioncharts>\n<div style='display: flex; justify-content: center'>\n  <span id="select-text">Choose a theme:</span>\n  <div class="change-type">\n      <div>\n          <input type="radio" name='options' [value]="fusion" [checked]='theme === "fusion"' (change)="onSelectionChange('fusion')"/>\n          <label>Fusion</label>\n      </div>\n      <div>\n          <input type="radio" name='options' [value]="gammel" [checked]='theme === "gammel"' (change)="onSelectionChange('gammel')"/>\n          <label>Gammel</label>\n      </div>\n      <div>\n          <input type="radio" name='options' [value]="candy" [checked]='theme === "candy"' (change)="onSelectionChange('candy')"/>\n          <label>Candy</label>\n      </div>\n      <div>\n          <input type="radio" name='options' [value]="zune" [checked]='theme === "zune"' (change)="onSelectionChange('zune')"/>\n          <label>Zune</label>\n      </div>\n      <div>\n          <input type="radio" name='options' [value]="ocean" [checked]='theme === "ocean"' (change)="onSelectionChange('ocean')"/>\n          <label>Ocean</label>\n      </div>\n      <div>\n          <input type="radio" name='options' [value]="carbon" [checked]='theme === "carbon"' (change)="onSelectionChange('carbon')"/>\n          <label>Carbon</label>\n      </div>\n  </div>\n</div>\n`
};

fcDemos['ex19'] =  {
    title: 'Slice data plots',
    description: 'Click the button to slice out Microsoft from the rest of the plots.',
    module: `// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load themes\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(\n  FusionCharts,\n  Charts,\n  FusionTheme\n)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    component: `// in app.component.ts\nimport {\n  Component,\n  NgZone\n} from '@angular/core';\n\n\n@Component({\n  selector: 'app',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  dataSource: any;\n  chartObj: any;\n  constructor(private zone: NgZone) {\n    this.dataSource = {\n      "chart": {\n        "caption": "Market Share of Web Servers",\n        "plottooltext": "<b>$percentValue</b> of web servers run on $label servers",\n        "showLegend": "1",\n        "showPercentValues": "1",\n        "legendPosition": "bottom",\n        "useDataPlotColorForLabels": "1",\n        "theme": "fusion",\n      },\n      "data": [{\n        "label": "Apache",\n        "value": "32647479"\n      }, {\n        "label": "Microsoft",\n        "value": "22100932"\n      }, {\n        "label": "Zeus",\n        "value": "14376"\n      }, {\n        "label": "Other",\n        "value": "18674221"\n      }]\n    };\n  }\n\n  initialized($event){\n    this.chartObj = $event.chart;\n  }\n\n  sliceOut(){\n    this.chartObj.slicePlotItem(1, true);\n  }\n\n  reset(){\n    this.chartObj.slicePlotItem(1, false);\n  }\n}\n`,
    template: `<!-- in app.component.html -->\n\n<style>\n  .btn.btn-outline-secondary.btn-sm:hover {\n    color: white;\n  }\n\n  .btn.btn-outline-secondary.btn-sm:active {\n    color: gray;\n  }\n\n  .btn {\n    margin-left: 10px;\n  }\n</style>\n\n<fusioncharts \n  width="100%" \n  height="400" \n  type="pie2d" \n  [dataSource]=dataSource \n  (initialized)="initialized($event)">\n</fusioncharts>\n<p>\n  <a class="btn btn-outline-secondary btn-sm" (click)="sliceOut()">Slice out Microsoft</a>\n  <a class="btn btn-outline-secondary btn-sm" (click)="reset()">Reset</a>\n</p>`
};

fcDemos['ex20'] =  {
    title: 'Responsive charts',
    description: 'Select any of the dimensions given in the list. The chart adjusts itself to its alloted percentage',
    module: `// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load themes\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(\n  FusionCharts,\n  Charts,\n  FusionTheme\n)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    component: `// in app.component.ts\nimport {\n  Component,\n  NgZone\n} from '@angular/core';\n\n\n@Component({\n  selector: 'app',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  dataSource: any;\n  chartObj: any;\n  size: string = "secondSize";\n  allSizes = {\n    firstSize: { width : '400px', height: '200px'},\n    secondSize: { width: '600px', height: '350px' },\n    thirdSize: { width: '700px', height: '400px' }\n  }\n  styleObj: object;\n  \n  constructor(private zone: NgZone) {\n    this.dataSource = {\n      "chart": {\n          "caption": "Countries With Most Oil Reserves [2017-18]",\n          "subCaption": "In MMbbl = One Million barrels",\n          "xAxisName": "Country",\n          "yAxisName": "Reserves (MMbbl)",\n          "numberSuffix": "K",\n          "theme": "fusion"\n      },\n      "data": [\n          {\n              "label": "Venezuela",\n              "value": "290"\n          },\n          {\n              "label": "Saudi",\n              "value": "260"\n          },\n          {\n              "label": "Canada",\n              "value": "180"\n          },\n          {\n              "label": "Iran",\n              "value": "140"\n          },\n          {\n              "label": "Russia",\n              "value": "115"\n          },\n          {\n              "label": "UAE",\n              "value": "100"\n          },\n          {\n              "label": "US",\n              "value": "30"\n          },\n          {\n              "label": "China",\n              "value": "30"\n          }\n      ]\n    };\n\n    this.styleObj = this.allSizes[this.size];\n  }\n\n  getStyle(){\n    return this.styleObj;\n  }\n\n  initialized($event){\n    this.chartObj = $event.chart;\n  }\n  onSelectionChange(size){\n    this.size = size;\n    this.styleObj = this.allSizes[this.size];\n  }\n}\n`,
    template: `<!-- in app.component.html -->\n<style>\n  #chart-container-ele {\n    width: 600px;\n    height: 350px;\n  }\n</style>\n\n<div id="#chart-container-ele" [ngStyle]="getStyle()">\n  <fusioncharts \n    width="100%" \n    height="100%" \n    type="column2d" \n    [dataSource]=dataSource \n    (initialized)="initialized($event)">\n  </fusioncharts>\n</div>\n<div style='display: flex; justify-content: center'>\n  <span id="select-text">Select size:</span>\n  <div class="change-type">\n    <div>\n      <input type="radio" name='options' [value]="'firstSize'" [checked]='size === "firstSize"' (change)="onSelectionChange('firstSize')"\n      />\n      <label>400 X 250</label>\n    </div>\n    <div>\n      <input type="radio" name='options' [value]="'secondSize'" [checked]='size === "secondSize"' (change)="onSelectionChange('secondSize')"\n      />\n      <label>600 X 350</label>\n    </div>\n    <div>\n      <input type="radio" name='options' [value]="'thirdSize'" [checked]='theme === "thirdSize"' (change)="onSelectionChange('thirdSize')"\n      />\n      <label>700 X 400</label>\n    </div>\n\n  </div>\n</div>`
};

fcDemos['ex21'] =  {
    title: 'Change chart type at runtime',
    description: 'Change the chart type dynamically or at runtime',
    module: `// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load themes\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(\n  FusionCharts,\n  Charts,\n  FusionTheme\n)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    component: `// In app.component.ts\nimport {\n  Component,\n  NgZone\n} from '@angular/core';\n\n\n@Component({\n  selector: 'app',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  dataSource: any;\n  chartObj:any;\n  chart: any = 'column2d';\n\n  constructor(private zone: NgZone) {\n    this.dataSource = {\n      "chart": {\n          "caption": "Recommended Portfolio Split",\n          "subCaption" : "For a net-worth of $1M",\n          "showValues":"1",\n          "showPercentInTooltip" : "0",\n          "numberPrefix" : "$",\n          "enableMultiSlicing":"1",\n          "theme": "fusion"\n      },\n      "data": [\n          {\n              "label": "Equity",\n              "value": "300000"\n          }, {\n              "label": "Debt",\n              "value": "230000"\n          }, {\n              "label": "Bullion",\n              "value": "180000"\n          }, {\n              "label": "Real-estate",\n              "value": "270000"\n          }, {\n              "label": "Insurance",\n              "value": "20000"\n          }\n      ]\n    };\n  }\n\n  initialized($event){\n    this.chartObj = $event.chart; // saving chart instance\n  }\n  \n  onSelectionChange(chart){\n    this.chart = chart;\n    this.chartObj.chartType(chart); // Changing chart type using chart instance\n  }\n}\n`,
    template: `<!-- in app.component.html -->\n<fusioncharts\n  width="100%" \n  height="400" \n  type="column2d" \n  [dataSource]=dataSource \n  (initialized)="initialized($event)">\n</fusioncharts>\n<div style='display: flex; justify-content: center'>\n  <span id="select-text">Select size:</span>\n  <div class="change-type">\n    <div>\n      <input type="radio" name='options' [value]="'column2d'" [checked]='chart === "column2d"' (change)="onSelectionChange('column2d')" />\n      <label>Column2d</label>\n    </div>\n    <div>\n      <input type="radio" name='options' [value]="'bar2d'" [checked]='chart === "bar2d"' (change)="onSelectionChange('bar2d')" />\n      <label>Bar2d</label>\n    </div>\n    <div>\n      <input type="radio" name='options' [value]="'pie2d'" [checked]='chart === "pie2d"' (change)="onSelectionChange('pie2d')" />\n      <label>Pie2d</label>\n    </div>\n  </div>\n</div>`
};
fcDemos['ex22'] =  {
    title: 'Use annotations',
    description: 'Add custom shapes to highlight a specific data point',
    module: `// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load themes\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(\n  FusionCharts,\n  Charts,\n  FusionTheme\n)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    component: `// In app.component.ts \nimport {\n  Component,\n  NgZone\n} from '@angular/core';\n\n\n@Component({\n  selector: 'app',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  dataSource: any;\n  constructor(private zone: NgZone) {\n    this.dataSource = {\n      "chart": {\n        "caption": "Bakersfield Central - Total footfalls",\n        "subCaption": "Last week",\n        "xAxisName": "Day",\n        "yAxisName": "No. of Visitors (In 1000s)",\n        "showValues": "0",\n        "theme": "fusion"\n      },\n      "annotations": {\n        "groups": [{\n          "id": "anchor-highlight",\n          "items": [{\n              "id": "high-star",\n              "type": "circle",\n              "x": "$dataset.0.set.2.x",\n              "y": "$dataset.0.set.2.y",\n              "radius": "12",\n              "color": "#6baa01",\n              "border": "2",\n              "borderColor": "#f8bd19"\n            },\n            {\n              "id": "label",\n              "type": "text",\n              "text": "Highest footfall 25.5K",\n              "fillcolor": "#6baa01",\n              "rotate": "90",\n              "x": "$dataset.0.set.2.x+75",\n              "y": "$dataset.0.set.2.y-2"\n            }\n          ]\n        }]\n      },\n      "data": [{\n          "label": "Mon",\n          "value": "15123"\n        },\n        {\n          "label": "Tue",\n          "value": "14233"\n        },\n        {\n          "label": "Wed",\n          "value": "25507"\n        },\n        {\n          "label": "Thu",\n          "value": "9110"\n        },\n        {\n          "label": "Fri",\n          "value": "15529"\n        },\n        {\n          "label": "Sat",\n          "value": "20803"\n        },\n        {\n          "label": "Sun",\n          "value": "19202"\n        }\n      ]\n    }\n\n  }\n\n}`,
    template: `<!-- in app.component.html -->\n\n<fusioncharts\n  type="spline"\n  width="600"\n  height="400"\n  [dataSource]="dataSource">\n</fusioncharts>\n\n  `
};

fcDemos['ex23'] = {
    title: 'Lifecycle events',
    description: 'This sample lists the basic lifecycle events at the time of rendering FusionCharts',
    module: `// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load themes\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(\n  FusionCharts,\n  Charts,\n  FusionTheme\n)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    component:`// In app.component.ts\n\nimport {\n  Component,\n  NgZone\n} from '@angular/core';\n\n\n@Component({\n  selector: 'app',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  dataSource: any;\n  message = 'You will see notifications here for the chart lifecycle events';\n  constructor(private zone: NgZone) {\n    this.dataSource = {\n      "chart": {\n          "caption": "Countries With Most Oil Reserves [2017-18]",\n          "subCaption": "In MMbbl = One Million barrels",\n          "xAxisName": "Country",\n          "yAxisName": "Reserves (MMbbl)",\n          "numberSuffix": "K",\n          "theme": "fusion"\n      },\n      "data": [\n          {\n              "label": "Venezuela",\n              "value": "290"\n          },\n          {\n              "label": "Saudi",\n              "value": "260"\n          },\n          {\n              "label": "Canada",\n              "value": "180"\n          },\n          {\n              "label": "Iran",\n              "value": "140"\n          },\n          {\n              "label": "Russia",\n              "value": "115"\n          },\n          {\n              "label": "UAE",\n              "value": "100"\n          },\n          {\n              "label": "US",\n              "value": "30"\n          },\n          {\n              "label": "China",\n              "value": "30"\n          }\n      ]\n    };\n  }\n  \n  // Listener for beforeDataUpdate\n  beforeDataUpdate($event){\n    this.zone.run(() => {\n      this.message = 'Status: beforeDataUpdate';\n    });\n  }\n\n  // Listener for dataUpdated\n  dataUpdated($event){\n    this.zone.run(() => {\n      this.message += ', dataUpdated';\n    });\n  }\n\n  // Listener for drawComplete\n  drawComplete($event){\n    this.zone.run(() => {\n      this.message += ', drawComplete';\n    });\n  }\n\n  // Listener for renderComplete\n  renderComplete($event){\n    this.zone.run(() => {\n      this.message += ', renderComplete';\n    })\n  }\n}\n`,
    template:`<!-- in app.component.html -->\n\n<fusioncharts\n  type='column2d'\n  width='600'\n  height='400'\n  [dataSource]='dataSource'\n  (beforeDataUpdate)="beforeDataUpdate($event)"\n  (dataUpdated)="dataUpdated($event)"\n  (drawComplete)="drawComplete($event)"\n  (renderComplete)="renderComplete($event)">\n</fusioncharts>\n<p style="font-size:18px;font-weight: 300;padding:10px;background:#efefef">{{message}}</p>`,
};

fcDemos['ex24'] = {
    title: 'Slice data plots',
    description: 'Use Chart specific custom API',
    module: `// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load themes\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(\n  FusionCharts,\n  Charts,\n  FusionTheme\n)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    template: `<!-- Chart Component -->\n<fusioncharts \n  type='pie2d'\n  width='600' \n  height='400' \n  [dataSource]='dataSource' \n  (dataplotClick)='dataplotClick($event)'\n  (initialized)='initialized($event)'>\n</fusioncharts>\n<div style="display: flex; justify-content: center; bottom: 2px;">\n  <div class="change-type">\n    <div id="radio1">\n      <input name="slice-selecter" id="None" type="radio" [checked]="selectedSlice == 'none'" (change)="onRadioOptionChange('none')" />\n      <label for="None">None</label>\n    </div>\n    <div id="radio2">\n      <input name="slice-selecter" id="Apache" type="radio" [checked]="selectedSlice == 'apache'" (change)="onRadioOptionChange('apache')" />\n      <label for="Apache">Apache</label>\n    </div>\n    <div id="radio3">\n      <input name="slice-selecter" id="Microsoft" type="radio" [checked]="selectedSlice == 'microsoft'" (change)="onRadioOptionChange('microsoft')" />\n      <label for="Microsoft">Microsoft</label>\n    </div>\n    <div id="radio4">\n      <input name="slice-selecter" id="Zeus" type="radio" [checked]="selectedSlice == 'zeus'" (change)="onRadioOptionChange('zeus')" />\n      <label for="Zeus">Zeus</label>\n    </div>\n    <div id="radio5">\n      <input name="slice-selecter" id="Other" type="radio" [checked]="selectedSlice == 'other'" (change)="onRadioOptionChange('other')" />\n      <label for="Other">Other</label>\n    </div>\n  </div>\n</div>\n`,
    component:`// In app.component.ts\nimport {\n  Component,\n  NgZone\n} from '@angular/core';\n\n@Component({\n  selector: 'app',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  dataSource: any;\n  selectedSlice = 'none';\n  chart: any;\n  constructor(private zone: NgZone) {\n    this.dataSource = {\n      "chart": {\n          "caption": "Market Share of Web Servers",\n          "plottooltext": "<b>$percentValue</b> of web servers run on $label servers",\n          "showLegend": "1",\n          "showPercentValues": "1",\n          "legendPosition": "bottom",\n          "useDataPlotColorForLabels": "1",\n          "enablemultislicing": "0",\n          "showlegend": "0",\n          "theme": "fusion",\n      },\n      "data": [{\n          "label": "Apache",\n          "value": "32647479"\n      }, {\n          "label": "Microsoft",\n          "value": "22100932"\n      }, {\n          "label": "Zeus",\n          "value": "14376"\n      }, {\n          "label": "Other",\n          "value": "18674221"\n      }]\n    };\n  } \n\n  // FusionCharts initialized listener to get the chart instance\n  initialized($event){\n    this.chart = $event.chart; // saving chart instance \n  }\n\n  // Change listener for radio buttons\n  onRadioOptionChange(option){\n    this.selectedSlice = option;\n    // For each data element , see if it is selected, if none then slice in all elements\n    this.dataSource.data.forEach((d, index) => {\n      if(option == 'none'){\n        this.chart.slicePlotItem(index, false);\n      } else if(option === d.label.toLowerCase()){\n        this.chart.slicePlotItem(index, true);\n      }\n    });\n  }\n\n  // Get data item label\n  getLabel(index){\n    return this.dataSource.data[index].label;\n  }\n\n  // FusionCharts Component dataPlot click listener\n  dataplotClick($event){\n    let dataIndex = $event.dataObj.dataIndex;\n    let isSliced = $event.dataObj.isSliced;\n    this.zone.run(() => {\n      this.selectedSlice = isSliced ? 'none' : this.getLabel(dataIndex).toLowerCase();\n    })\n  }\n  \n  ngOnInit() {\n    setTimeout(() => {\n      SelectedSingleton.change(this.sampleCode['ex24'].title);\n    })\n  }\n}\n`
}

fcDemos['ex25'] = {
    title: 'Usage of FusionCharts methods (API)',
    description: 'Change a chart attribute by calling FusionCharts setChartAttribute API',
    module:`// Setup needed in app.module.ts\n\nimport { NgModule, enableProdMode } from '@angular/core'\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load themes\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(\n  FusionCharts,\n  Charts,\n  FusionTheme\n)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FusionChartsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n`,
    component: `// In app.component.ts\nimport {\n  Component,\n  NgZone\n} from '@angular/core';\n\n\n@Component({\n  selector: 'app',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  dataSource: any;\n  selectedSlice = 'none';\n  chart: any;\n  constructor(private zone: NgZone) {\n    this.dataSource = {\n      "chart": {\n        "caption": "Countries With Most Oil Reserves [2017-18]",\n        "subCaption": "In MMbbl = One Million barrels",\n        "xAxisName": "Country",\n        "yAxisName": "Reserves (MMbbl)",\n        "numberSuffix": "K",\n        "theme": "fusion"\n      },\n      "data": [{\n          "label": "Venezuela",\n          "value": "290"\n        },\n        {\n          "label": "Saudi",\n          "value": "260"\n        },\n        {\n          "label": "Canada",\n          "value": "180"\n        },\n        {\n          "label": "Iran",\n          "value": "140"\n        },\n        {\n          "label": "Russia",\n          "value": "115"\n        },\n        {\n          "label": "UAE",\n          "value": "100"\n        },\n        {\n          "label": "US",\n          "value": "30"\n        },\n        {\n          "label": "China",\n          "value": "30"\n        }\n      ]\n    };\n  }\n\n  initialized($event) {\n    this.chart = $event.chart; // saving chart instance\n  }\n\n  changeCaption(caption){\n    this.chart.setChartAttribute('caption', caption); // Changing caption\n  }\n\n  changeXAxisName(xaxisname){\n    this.chart.setChartAttribute('xaxisname', xaxisname); // Changing xaxisname using API\n  }\n\n  changeYAxisName(yaxisname){\n    this.chart.setChartAttribute('yaxisname', yaxisname); // Changing yaxisname using API\n  }\n\n  // Resetting chart attributes to initial data\n  reset(){\n    this.chart.setChartAttribute('caption', this.dataSource.chart.caption); \n    this.chart.setChartAttribute('xaxisname', this.dataSource.chart.xAxisName);\n    this.chart.setChartAttribute('yaxisname', this.dataSource.chart.yAxisName);\n  }\n}\n`,
    template:`<!-- In app.component.html -->\n<fusioncharts\n  type='column2d'\n  width='600'\n  height='400'\n  [dataSource]='dataSource'\n  (initialized)='initialized($event)'\n>\n</fusioncharts>\n<div style="justify-content: center; margin: 0px">\n    <button class="btn btn-outline-secondary btn-sm" id="caption" (click)="changeCaption('CAPTION')">CHANGE CAPTION: CAPTION</button>\n    <button class="btn btn-outline-secondary btn-sm" id="xaxis-name" (click)="changeXAxisName('X-AXIS NAME')">CHANGE X-AXIS NAME: X-AXIS NAME</button>\n    <button class="btn btn-outline-secondary btn-sm" id="yaxis-name" (click)="changeYAxisName('Y-AXIS NAME')">CHANGE Y-AXIS NAME: Y-AXIS NAME</button>\n    <button class="btn btn-outline-secondary btn-sm" id="reset" (click)="reset()">RESET</button>\n</div>`
}
export default fcDemos;